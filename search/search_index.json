{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#ubuntu-and-debian-for-rz-mpu-linux","title":"Ubuntu and Debian for RZ MPU Linux","text":"<p>Ubuntu and Debian are the most popular Linux distributions used for PCs and servers. They provide rich software ecosystems, and users can easily install the software over network. </p> <p>Ubuntu and Debian for RZ MPU Linux solution helps you to create Ubuntu/Debian environments on RZ MPU Evaluation Board Kit (EVK) for evaluation purposes.</p> <ul> <li>Free access for developers<ul> <li>This solution provides information for creating Ubuntu/Debian environments for evaluation and proof of concept purposes without any licensing contracts on the RZ EVK.</li> </ul> </li> <li>Easy-to-use<ul> <li>This solution provides guides, software, and scripts for creating Ubuntu/Debian environments. You can easily create Ubuntu/Debian environments by using software and scripts.</li> </ul> </li> </ul>"},{"location":"#whats-new","title":"What's new","text":"<p>2025/07/31</p> <ul> <li>Ubuntu Server 24.04 on RZ/G2L EVK is available.<ul> <li>RZ/G2L Ubuntu support package v1.0.1</li> <li>Linux kernel v6.1</li> </ul> </li> <li>Debian 13 RC1 on RZ/G2L EVK is available.<ul> <li>RZ/G2L Debian support package v1.0.1</li> <li>Linux kernel v6.1</li> </ul> </li> </ul> <p>View News &amp; Updates &gt;</p>"},{"location":"#overview","title":"Overview","text":"<p>This solution provides documents (this website), Renesas software, and script that help you to download Ubuntu and Debian ISO image from their web site, then create Ubuntu and Debian environments running on RZ EVK. The scripts merge Ubuntu/Debian root filesystem and Renesas software (Linux kernel, graphics library, codec library, and so on) to create the Ubuntu/Debian environment. You can install additional software packages by using 'apt' command. Renesas support covers Renesas deliverables only, i.e., Renesas software, documents, and scripts. Ubuntu image is maintained by Canonical. Support is available through Canonical.</p> <p>This solution supports the following distros and evaluation boards.</p> <p>Linux Distro</p> <p>kernel Version</p> <p>Target Board</p> <p>Ubuntu 24.04</p> <p>6.1</p> <p>RZ/G2L EVK (RTK9744L23S01000BE)</p> <p>Debian 13 RC1<sup>1</sup></p> <p>6.1</p> <p>RZ/G2L EVK (RTK9744L23S01000BE)</p> <ol> <li>This solution uses Debian 13 RC1 on May 17, 2025. \u21a9</li> </ol>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Getting Started is a complete guide on how to run Ubuntu and Debian on RZ MPU EVK, which explains the procedure for setting up the environment, setting up the board, and running Ubuntu and Debian on RZ MPU EVK.</p> <p>Get your target board now and GET STARTED.</p>"},{"location":"evk/","title":"Evaluation Board Kit (EVK) and Software","text":""},{"location":"evk/#evaluation-board-kit-evk-and-software","title":"Evaluation Board Kit (EVK) and Software","text":""},{"location":"evk/#rzg2l-evaluation-board-kit-evk","title":"RZ/G2L Evaluation Board Kit (EVK)","text":"<p> Get RZ/G2L EVK </p>"},{"location":"evk/#software-packages-for-ubuntu","title":"Software Packages for Ubuntu","text":"<p>Download the following packages for Ubuntu on RZ/G2L EVK.</p> <p>Package</p> <p>Description</p> <p>RTK0EF0045Z0030AZJ-v1.0.1.zip</p> <p>RZ/G2L Ubuntu Support Package v1.0.1 (Renesas Linux kernel, bootloaders, other OSS, and scripts)</p> <p>RTK0EF0045Z0032AZJ-v4.1.2.5_EN.zip</p> <p>RZ MPU Graphics Library Package for Ubuntu V4.1.2.5 for RZ/G2L</p> <p>RTK0EF0045Z0038AZJ-v4.1.3.0_EN.zip</p> <p>RZ MPU Video Codec Library Package for Ubuntu V4.1.3.0 for RZ/G2L</p>"},{"location":"evk/#software-packages-for-debian","title":"Software Packages for Debian","text":"<p>Download the following packages for Debian on RZ/G2L EVK.</p> <p>Package</p> <p>Description</p> <p>RTK0EF0045Z0031AZJ-v1.0.1.zip</p> <p>RZ/G2L Debian Support Package v1.0.1 (Renesas Linux kernel, bootloaders, other OSS, and scripts</p> <p>RTK0EF0045Z0033AZJ-v4.1.2.5_EN.zip</p> <p>RZ MPU Graphics Library Package for Debian V4.1.2.5 for RZ/G2L</p> <p>RTK0EF0045Z0039AZJ-v4.1.3.0_EN.zip</p> <p>RZ MPU Video Codec Library Package for Debian V4.1.3.0 for RZ/G2L</p> <p>Back to Home &gt; Back to Getting Started &gt;</p>"},{"location":"getting_started/","title":"Getting Started","text":""},{"location":"getting_started/#getting-started","title":"Getting Started","text":"<p>This page explains how to start-up Ubuntu or Debian on RZ MPU evaluation board kit.</p>"},{"location":"getting_started/#step-1-obtain-an-evaluation-board","title":"Step 1: Obtain an evaluation board","text":"<p>Click the button below to get the board.</p> <p>BoardGet the board for RZ MPUs.</p> RZ/G2L <p></p> <p>The RZ/G2L Evaluation Board Kit (EVK) is the ideal board kit for RZ/G2L evaluation.</p> <p>The following items are included in the RZ/G2L Evaluation Board Kit.</p> Equipment Details RZ/G2L Evaluation Board Evaluation board itself Micro USB to Serial Cable For serial communication between PC and the board"},{"location":"getting_started/#step-2-obtain-necessary-environment","title":"Step 2: Obtain necessary environment","text":"<p>Please prepare the following equipment.</p> <ul> <li> <p>PC used for creating a bootable microSD card</p> <ul> <li>At least 50GB or more free space of HDD/SDD</li> <li>8GB or more RAM</li> <li>4-core or more CPU</li> <li>Ubuntu (64-bit) 22.04 LTS or 24.04 LTS<ul> <li><code>sudo</code> permission and internet connection are required.</li> </ul> </li> </ul> </li> <li> <p>microSD card for Ubuntu/Debian bootable image</p> <ul> <li>Type: SDHC, SDXC</li> <li>Capacity: Minimum 32GB</li> </ul> </li> </ul>"},{"location":"getting_started/#step-3-obtain-ubuntu-and-debian-for-rz-mpu-linux","title":"Step 3: Obtain Ubuntu and Debian for RZ MPU Linux","text":"<p>Click the button below to get Renesas software for Ubuntu or Debian.</p> <p> Get Renesas Software</p>"},{"location":"getting_started/#step-4-create-a-bootable-microsd-card","title":"Step 4: Create a bootable microSD card","text":"UbuntuDebian <p>To create a bootable microSD card for Ubuntu, see RZ/G2L Ubuntu Bootable Tool.</p> <p>To create a bootable microSD card for Debian, see RZ/G2L Debian Bootable Tool.</p>"},{"location":"getting_started/#step-5-write-flash-writer-and-bootloaders","title":"Step 5: Write flash writer and bootloaders","text":"<p>The following tools are used in the instructions below. Please install them to your PC in advance.</p> Windows PCLinux PC <p>Tera Term (terminal software)</p> <p>FTDI VCP driver</p> <p>minicom</p>"},{"location":"getting_started/#1-setup-evks-peripheral","title":"1. Setup EVK's peripheral","text":"<p>To write flash writer and bootloaders, you need to connect your PC to the EVK with a USB serial cable.</p> RZ/G2L <p></p>"},{"location":"getting_started/#2-set-boot-mode-to-scif-download-mode","title":"2. Set boot mode to SCIF download mode","text":"<p>Turn off the power of EVK, then set the SW11 as follows.</p> <p></p> SW11-1 SW11-2 SW11-3 SW11-4 OFF ON OFF ON"},{"location":"getting_started/#3-configure-terminal-software","title":"3. Configure terminal software","text":"<p>Configure the setting of serial communication on terminal software as follows:</p> Variable Value Baud rate <code>115200</code> bps Data <code>8 bits</code> Parity <code>none</code> Stop <code>1 bit</code> Flow control <code>none</code>"},{"location":"getting_started/#4-prepare-flash-writer-and-bootloaders","title":"4. Prepare flash writer and bootloaders","text":"<p>The flash writer and the bootloaders are stored in the package. Unzip the package and pick up flash write and bootloaders.</p> RZ/G2L <ul> <li> <p>Flash writer</p> <ul> <li><code>Flash_Writer_SCIF_RZG2L_SMARC_PMIC_DDR4_2GB_1PCS.mot</code></li> </ul> </li> <li> <p>Bootloaders</p> <ul> <li><code>bl2_bp_spi-smarc-rzg2l_pmic.srec</code></li> <li><code>fip-smarc-rzg2l_pmic.srec</code></li> </ul> </li> </ul>"},{"location":"getting_started/#5-download-flash-writer-to-ram","title":"5. Download flash writer to RAM","text":"<p>Turn on the power of the EVK by pressing SW9. The messages below are shown on the terminal.</p> <pre><code> SCIF Download mode\n (C) Renesas Electronics Corp.\n-- Load Program to System RAM ---------------\nplease send !\n</code></pre> <p>Send an image of <code>Flash Writer</code> using terminal software after the message please send ! is shown.</p> Windows PC (Tera Term)Linux PC (minicom) <p>Open the File menu, then select Send file... to open Send file dialog.</p> <p>Select the <code>Flash Writer</code> image in the dialog, and press Open button.</p> <p>Press Ctrl+A+S, then select ascii for upload mode.</p> <p>Select the <code>Flash Writer</code> image file.</p> <p>Press any key when upload is completed.</p> <p>After successfully downloading the image, the <code>Flash Writer</code> starts automatically and shows a message like below on the terminal.</p> <pre><code>Flash writer for RZ/G2 Series V1.06 Aug.10,2022                                                    \n Product Code : RZ/G2L\n&gt;\n</code></pre>"},{"location":"getting_started/#6-write-the-bootloaders","title":"6. Write the bootloaders","text":""},{"location":"getting_started/#6-1-change-baud-rate-of-serial-port","title":"6-1. Change baud rate of serial port","text":"<p>Before writing the loader files, change the flash writer transfer rate from default (<code>115200</code> bps) to high speed (<code>921600</code> bps) with <code>SUP</code> command.</p> <p></p><pre><code>SUP\n</code></pre><p></p> <p>After the <code>SUP</code> command, change the serial communication protocol speed from <code>115200</code> bps to <code>921600</code> bps on the terminal software.</p>"},{"location":"getting_started/#6-2-write-bl2-file","title":"6-2. Write bl2 file","text":"<p>Execute <code>XLS2</code> command to write boot loader binary files.</p> <p></p><pre><code>XLS2\n</code></pre><p></p> <p>This command receives binary data from the serial port and writes the data to a specified address of the Flash ROM with information where the data should be loaded on the address of the main memory. Set the following addresses respectively.</p> <ul> <li>Address to load to RAM: <code>H'11E00</code></li> <li>Address to save to ROM: <code>H'00000</code></li> </ul> <p>For example:</p> <pre><code>&gt;XLS2                                                                                              \n===== Qspi writing of RZ/G2 Board Command =============                                            \nLoad Program to Spiflash                                                                           \nWrites to any of SPI address.                                                                      \n Dialog : AT25QL128A                                                                               \nProgram Top Address &amp; Qspi Save Address                                                            \n===== Please Input Program Top Address ============                                                \n  Please Input : H'11E00                                                                           \n\n===== Please Input Qspi Save Address ===                                                           \n  Please Input : H'00000                                                                           \nWork RAM(H'50000000-H'53FFFFFF) Clear....                                                          \nplease send ! ('.' &amp; CR stop load)\n</code></pre> <p>Send the data of <code>bl2_bp-spi-smarc-rzg2*.srec</code> from terminal software in the same way as the <code>Flash Writer</code> after the message please send ! is shown.</p> <p>Note</p> <p>In the case that the following message is shown, enter Y.</p> <pre><code>SPI Data Clear(H'FF) Check :H'00000000-0000FFFF,Clear OK?(y/n)\n</code></pre> <p>After writing the data is completed, the following messages like below are shown on the terminal.</p> <pre><code>SPI Data Clear(H'FF) Check :H'00000000-0000FFFF Erasing..Erase Completed\nSAVE SPI-FLASH.......\n======= Qspi  Save Information  =================\n SpiFlashMemory Stat Address : H'00000000\n SpiFlashMemory End Address  : H'0000CA38\n===========================================================\n\n&gt;\n</code></pre>"},{"location":"getting_started/#6-3-write-fip-file","title":"6-3. Write fip file","text":"<p>Execute <code>XLS2</code> command to write fip file.</p> <p></p><pre><code>XLS2\n</code></pre><p></p> <p>Set the following addresses respectively for the fip file.</p> <ul> <li>Address to load to RAM: <code>H'00000</code></li> <li>Address to save to ROM: <code>H'1D200</code></li> </ul> <p>For example:</p> <pre><code>&gt;XLS2\n===== Qspi writing of RZ/G2 Board Command =============\nLoad Program to Spiflash\nWrites to any of SPI address.\n Dialog : AT25QL128A\nProgram Top Address &amp; Qspi Save Address\n===== Please Input Program Top Address ============\n  Please Input : H'00000\n\n===== Please Input Qspi Save Address ===\n  Please Input : H'1D200\nWork RAM(H'50000000-H'53FFFFFF) Clear....\nplease send ! ('.' &amp; CR stop load)\n</code></pre> <p>Send the data of <code>fip-smarc-rzg2*.srec</code> from terminal software in the same way as the <code>Flash Writer</code> after the message please send ! is shown.</p> <p>Note</p> <p>In the case that the following message is shown, enter Y.</p> <pre><code>SPI Data Clear(H'FF) Check :H'00010000-000EFFFF,Clear OK?(y/n)\n</code></pre> <p>After writing the data is completed, the following messages like below are shown on the terminal.</p> <pre><code>SPI Data Clear(H'FF) Check :H'00010000-000EFFFF Erasing..............Erase Completed\nSAVE SPI-FLASH.......\n======= Qspi  Save Information  =================\n SpiFlashMemory Stat Address : H'0001D200\n SpiFlashMemory End Address  : H'000DD9EF\n===========================================================\n\n&gt;\n</code></pre>"},{"location":"getting_started/#6-4-restore-baud-rate-of-serial-port","title":"6-4. Restore baud rate of serial port","text":"<p>After writing two loader files is completed, restore the serial communication protocol speed to <code>115200</code> bps on the terminal software.</p> <p>Then, turn off the power of the board by pressing the SW9.</p>"},{"location":"getting_started/#step-6-run-ubuntu-debian-on-rz-evk","title":"Step 6: Run Ubuntu / Debian on RZ EVK","text":""},{"location":"getting_started/#1-setup-evks-peripheral_1","title":"1. Setup EVK's peripheral","text":"<p>Before you start Ubuntu / Debian on RZ EVK, you need to set up the EVK.</p> RZ/G2L <p></p>"},{"location":"getting_started/#2-setup-evks-dip-switch","title":"2. Setup EVK's DIP switch","text":"RZ/G2L <p>Set up DIP switch SW1 and SW11 as follows.</p> <ul> <li> <p>SW1</p> <p></p> SW1-1 SW1-2 ON OFF </li> <li> <p>SW11</p> <p></p> SW11-1 SW11-2 SW11-3 SW11-4 OFF OFF OFF ON </li> </ul>"},{"location":"getting_started/#3-setup-u-boot","title":"3. Setup u-boot","text":"<p>Turn on the power of the EVK by pressing SW9, and press Enter key within a few seconds to interrupt the boot process. If it succeeds, you will see the following messages:</p> <pre><code>NOTICE:  BL2: v2.9(release):v2.5/rzg2l-1.00-3892-gcc1869562\nNOTICE:  BL2: Built : 16:36:45, Jul  2 2025\nNOTICE:  BL2: Booting BL31\nNOTICE:  BL31: v2.9(release):v2.5/rzg2l-1.00-3892-gcc1869562\nNOTICE:  BL31: Built : 16:36:48, Jul  2 2025\n\n\nU-Boot 2021.10-gb105c304da (Jul 02 2025 - 16:35:42 +0700)\n\nCPU:   Renesas Electronics CPU rev 1.0\nModel: smarc-rzg2l\nDRAM:  1.9 GiB\nSF: Detected mt25qu512a with page size 256 Bytes, erase size 64 KiB, total 64 MiB\nWDT:   watchdog@0000000012800800\nWDT:   Started with servicing (60s timeout)\nMMC:   sd@11c00000: 0, sd@11c10000: 1\nLoading Environment from MMC... OK\nIn:    serial@1004b800\nOut:   serial@1004b800\nErr:   serial@1004b800\nU-boot WDT started!\nNet:\nError: ethernet@11c20000 address not set.\n\nError: ethernet@11c30000 address not set.\nNo ethernet found.\n\nHit any key to stop autoboot:  0\n=&gt;\n=&gt;\n</code></pre> <p>Configure U-Boot environment variables to boot from a microSD card as follows:</p> UbuntuDebian <p></p><pre><code>setenv bootcmd 'load mmc 1:1 0x48080000 efi/boot/bootaa64.efi; bootefi 0x48080000'\nsaveenv\n</code></pre><p></p> <p>Load and boot \"bootaa64.efi\" from EFI partition 1 of the microSD card (CN10). If the EFI partition resides on a different partition, such as partition 2, please modify \"1:1\" to \"1:2\".</p> <p></p><pre><code>setenv bootcmd 'load mmc 1:2 0x48080000 efi/boot/bootaa64.efi; bootefi 0x48080000'\nsaveenv\n</code></pre><p></p> <p>Load and boot \"bootaa64.efi\" from EFI partition 2 of the microSD card (CN10). If the EFI partition resides on a different partition, such as partition 1, please modify \"1:2\" to \"1:1\".</p> <p>The RZ/G2L EVK does not have a MAC address, so you need to set appropriate MAC addresses. Set the Ethernet MAC addresses on U-boot as follows:</p> <p></p><pre><code>setenv ethaddr XX:XX:XX:XX:XX:XX\nsetenv eth1addr XX:XX:XX:XX:XX:XX\nsaveenv\n</code></pre><p></p> <p>You can assign other values, but please ensure that they are unique. Both of the Ethernet MAC addresses must be defined; otherwise, U-Boot will encounter a \"Synchronous Abort\" exception when booting \"bootaa64.efi\".</p> <p>Note</p> <p>If you would like to restore default environment variables in u-boot, run the following command:</p> <p></p><pre><code>env default -a\nsaveenv\n</code></pre><p></p> <p>Press the RESET button (SW10) to start Ubuntu / Debian.</p>"},{"location":"getting_started/#3-configure-network","title":"3. Configure network","text":"<p>When you turn on the power of the EVK or press the RESET button, you will see GNU GRUB menu. Select Linux-renesas-6.1 in the menu, and press Enter.</p> <p>When you run Ubuntu / Debian for the first time on the environment, configure network so that you can install packages with <code>apt</code>.</p> UbuntuDebian <p>Edit \"/etc/netplan/50-cloud-init.yaml\" as follows:</p> <pre><code>network:\n  version: 2\n  renderer: networkd\n  ethernets:\n    end0:\n      dhcp4: true\n</code></pre> <p>Then, execute the following command to apply the settings. </p><pre><code>sudo netplan apply\n</code></pre><p></p> <p>Edit \"/etc/network/interfaces\" as follows:</p> <pre><code>allow-hotplug end0\niface end0 inet dhcp\n</code></pre> <p>Then, execute the following command as root to apply the settings. </p><pre><code>systemctl restart networking\n</code></pre><p></p>"},{"location":"getting_started/#4-run-ubuntu-debian-on-evk","title":"4. Run Ubuntu / Debian on EVK","text":"<p>Turn on the power of the EVK or press the RESET button. Select Linux-renesas-6.1 in the GNU GRUB menu, and press Enter to run Ubuntu / Debian on the EVK.</p>"},{"location":"getting_started/getting_started_debian/","title":"RZ/G2L Debian Bootable Tool","text":""},{"location":"getting_started/getting_started_debian/#rzg2l-debian-bootable-tool","title":"RZ/G2L Debian Bootable Tool","text":"<p>Back to Getting Started &gt;</p>"},{"location":"getting_started/getting_started_debian/#1-overview","title":"1. Overview","text":"<p>The RZ/G2L Debian Bootable Tool is a Bash script designed to streamline the creation and customization of bootable ARM64 Linux disk images for Debian 13 on the RZ/G2L platform.</p> <p>It offers a user-friendly, menu-based interface using <code>whiptail</code> and <code>zenity</code>, making it easy to create, manage disk images and apply custom configurations.</p> <p>The tool also supports writing images directly to an SD card.</p>"},{"location":"getting_started/getting_started_debian/#2-objectives","title":"2. Objectives","text":"<ul> <li> <p>Preparing The Image:</p> <ul> <li>Use an existing image or create a new 16GB image.</li> <li>Download Debian 13 ARM64 ISO if it doesn't exist already.</li> <li>Use QEMU to install Debian 13 from the ISO into the created image.</li> </ul> </li> <li> <p>Install Software Packages:</p> <ul> <li>Install OSS (Open-source Software) packages including CIP kernel, GStreamer, MMNGR, VSPMIF.</li> <li>Install HW Graphics packages (optional).</li> <li>Install HW Codec packages (optional).</li> </ul> </li> <li> <p>Write The Image:</p> <ul> <li>Select and write the image to an SD card.</li> </ul> </li> </ul>"},{"location":"getting_started/getting_started_debian/#3-scripts-details","title":"3. Scripts Details","text":"<p>The bootable Linux image creation process is implemented as several small scripts for easy maintenance. Here is the introduction and main functions.</p> <ul> <li><code>make_bootable_tool.sh</code>: Contain the main menu selection.</li> <li><code>install_qemu.sh</code>: Install QEMU version 8.2.9.</li> <li><code>run_qemu.sh</code>: Start QEMU VM to install Debian 13 from the ISO into the image.</li> <li><code>install_renesas_sw.sh</code>: Set up environment for chroot method to install software packages.</li> <li><code>install_packages_debian.sh</code>: Install software packages inside a Debian chroot environment.</li> <li><code>attach_sd.sh</code>: Write bootable image to SD card.</li> <li><code>settings.txt</code>: Save previously used image names.</li> </ul>"},{"location":"getting_started/getting_started_debian/#4-usage","title":"4. Usage","text":""},{"location":"getting_started/getting_started_debian/#41-prerequisites","title":"4.1 Prerequisites","text":"<ul> <li>Ubuntu 22.04 LTS, and 24.04 LTS are supported.</li> <li>Internet connection is required.</li> <li>The <code>sudo</code> permission is required.</li> <li>50GB+ available storage.</li> <li>32GB+ microSD card.</li> </ul>"},{"location":"getting_started/getting_started_debian/#42-how-to-use-debian-installer","title":"4.2 How To Use Debian Installer","text":"<ul> <li> <p>Set the following environment:</p> <p></p><pre><code>export DL_DIR=&lt;A directory path where packages downloaded in step 3 are stored&gt;\nexport WORK_DIR=&lt;A path to your working directory&gt;\n</code></pre><p></p> </li> <li> <p>Create your working directory, and decompress packages:</p> <p></p><pre><code>mkdir -p ${WORK_DIR}\ncd ${DL_DIR}\nunzip RTK0EF0045Z0031AZJ-v*.zip\ntar xf RTK0EF0045Z0031AZJ-v*/rz-debian-support-v*.tar.gz -C ${WORK_DIR}\nunzip RTK0EF0045Z0033AZJ-v*_EN.zip\ntar xf RTK0EF0045Z0033AZJ-v*_EN/rz-graphics-v*.tar.gz -C ${WORK_DIR}\nunzip RTK0EF0045Z0039AZJ-v*_EN.zip\ntar xf RTK0EF0045Z0039AZJ-v*_EN/rz-codecs-v*.tar.gz -C ${WORK_DIR}\n</code></pre><p></p> </li> <li> <p>Check your working directory:</p> <p></p><pre><code>ls ${WORK_DIR}\n</code></pre><p></p> <p>You will see the following directories.</p> <pre><code>bootloaders  installer  oss  rz-codecs  rz-graphics\n</code></pre> </li> <li> <p>Execute <code>./make_bootable_tool.sh</code> to open the GUI:</p> <p></p><pre><code>cd ${WORK_DIR}/installer\n./make_bootable_tool.sh\n</code></pre><p></p> </li> <li> <p>The main menu provides 3 options:</p> <ul> <li>Select Image: Prepare an image with Debian 13 pre-installed.</li> <li>Install Software: Install software packages on the image.</li> <li>Write Image: Write the image to the SD card.</li> </ul> <p></p> </li> </ul>"},{"location":"getting_started/getting_started_debian/#421-select-image","title":"4.2.1 Select Image","text":"<ul> <li> <p>Press Enter on the Select Image: and select one of the two options below:</p> <ul> <li>1 Browse: Select an image with Debian 13 pre-installed.</li> <li>2 Create New: Create a new 16GiB image and install Debian 13 on it.</li> </ul> <p></p> </li> </ul> <p>Note</p> <p>When you perform this process for the first time, you need to create a new image (2 Create New). You can use the created image next time (1 Browse).</p> <ul> <li> <p>For the 1 Browse option, use the file dialog to select the image (e.g., <code>Debian_13.img</code>). Next, press OK to confirm and skip to Section 4.2.2.</p> <p></p> </li> <li> <p>For the 2 Create New option, use the file dialog to name the image (e.g., <code>Debian_13.img</code>) and select its location. Next, press OK to confirm.</p> <p></p> </li> <li> <p>Enter the administrator password. The tool will then download, build, and install QEMU version 8.2.9. If it's already installed, this step will be skipped.</p> <p></p> </li> <li> <p>The tool will allocate and format <code>Debian_13.img</code>.</p> <p></p> </li> <li> <p>The tool will download Debian 13 ISO. If it already exists in the <code>downloads</code> folder, this step will be skipped.</p> <p></p> </li> <li> <p>The tool will use QEMU VM to install Debian 13 on <code>Debian_13.img</code>. Press \"Ok\" to continue.</p> <p></p> </li> <li> <p>Follow installation instructions in Section 4.3.</p> </li> <li> <p>If successful, the Completed dialog box will appear. Press OK to continue.</p> <p></p> </li> </ul>"},{"location":"getting_started/getting_started_debian/#422-install-software","title":"4.2.2 Install Software","text":"<ul> <li> <p>Press Enter on the Install Software:.</p> <p></p> </li> <li> <p>Enter the administrator password. The tool will then install all .deb packages into <code>Debian_13.img</code>.</p> <p></p> </li> <li> <p>Wait for the Success dialog box. Press OK to continue.</p> <p></p> </li> </ul>"},{"location":"getting_started/getting_started_debian/#423-write-image","title":"4.2.3 Write Image","text":"<ul> <li> <p>Plug in the microSD card to the Host PC.</p> </li> <li> <p>Press Enter on Write Image: to write <code>Debian_13.img</code> to the microSD card.</p> <p></p> </li> <li> <p>Select the microSD card (e.g., <code>sdb Transcend (59,5G)</code>). Press OK to continue.</p> <p></p> </li> <li> <p>Press Proceed to confirm.</p> <p></p> </li> <li> <p>The tool will write <code>Debian_13.img</code> to <code>sdb Transcend (59,5G)</code>. Wait until 16GiB of data is written.</p> <p></p> </li> <li> <p>If successful, the following dialog box will appear. Press OK to continue.</p> <p></p> <p></p> </li> <li> <p>Press Save and Exit to save the settings. Then press OK to exit.</p> <p></p> <p></p> <p></p> </li> <li> <p>Execute <code>sudo eject /dev/sdb</code> to safely remove the microSD card from the Host PC.</p> </li> </ul>"},{"location":"getting_started/getting_started_debian/#43-how-to-install-debian-13","title":"4.3 How To Install Debian 13","text":"<ul> <li> <p>Press Enter on Install.</p> <p></p> </li> <li> <p>Press Enter on English.</p> <p></p> </li> <li> <p>Select your country, territory, or area (e.g., United States).</p> <p></p> </li> <li> <p>Select your keyboard configuration (e.g., American English).</p> <p></p> </li> <li> <p>Edit the hostname (e.g., debian), then press Continue.</p> <p></p> </li> <li> <p>Enter the domain name, then press Continue (leave blank if not applicable).</p> <p></p> </li> <li> <p>Set and verify the root password.</p> <p></p> <p></p> </li> <li> <p>Create a user account (e.g., user).</p> <p></p> <p></p> <p></p> <p></p> </li> <li> <p>Select your time zone (e.g., Eastern).</p> <p></p> </li> <li> <p>Press Enter on Guided - use entire disk.</p> <p></p> </li> <li> <p>Press Enter on Virtual disk 1 (vda) - 17.2 GB Virtio Block Device.</p> <p></p> </li> <li> <p>Press Enter on All files in one partition (recommended for new users).</p> <p></p> </li> <li> <p>Press Enter on Finish partitioning and write changes to disk, then confirm with Yes.</p> <p></p> <p></p> </li> <li> <p>Press Yes to update the software using a network mirror.</p> <p></p> </li> <li> <p>Select archive mirror country (e.g., United States).</p> <p></p> </li> <li> <p>Press Enter on deb.debian.org.</p> <p></p> </li> <li> <p>Edit HTTP proxy information (leave blank if not applicable), then press Continue.</p> <p></p> </li> <li> <p>Press NO to skip the package usage survey.</p> <p></p> </li> <li> <p>Do not select any desktop environment. Press Continue to proceed.</p> <p></p> </li> <li> <p>If successful, the Installation complete dialog box will appear. Click Continue to exit the installer.</p> <p></p> </li> <li> <p>At GRUB interface, press Ctrl+A+X to exit the VM.</p> <p></p> </li> </ul> <p>Back to Getting Started &gt;</p>"},{"location":"getting_started/getting_started_ubuntu/","title":"RZ/G2L Ubuntu Bootable Tool","text":""},{"location":"getting_started/getting_started_ubuntu/#rzg2l-ubuntu-bootable-tool","title":"RZ/G2L Ubuntu Bootable Tool","text":"<p>Back to Getting Started &gt;</p>"},{"location":"getting_started/getting_started_ubuntu/#1-overview","title":"1. Overview","text":"<p>The RZ/G2L Ubuntu Bootable Tool is a Bash script designed to streamline the creation and customization of bootable ARM64 Linux disk images for Ubuntu 24.04 on the RZ/G2L platform.</p> <p>It offers a user-friendly, menu-based interface using <code>whiptail</code> and <code>zenity</code>, making it easy to create, manage disk images and apply custom configurations.</p> <p>The tool also supports writing images directly to an SD card.</p>"},{"location":"getting_started/getting_started_ubuntu/#2-objectives","title":"2. Objectives","text":"<ul> <li> <p>Preparing The Image:</p> <ul> <li>Use an existing image or create a new 16GB image.</li> <li>Download Ubuntu 24.04 ARM64 ISO if it doesn't exist already.</li> <li>Use QEMU to install Ubuntu 24.04 from the ISO into the created image.</li> </ul> </li> <li> <p>Install Software Packages:</p> <ul> <li>Install OSS (Open-source Software) packages including CIP kernel, GStreamer, MMNGR, VSPMIF.</li> <li>Install HW Graphics packages (optional).</li> <li>Install HW Codec packages (optional).</li> </ul> </li> <li> <p>Write The Image:</p> <ul> <li>Select and write the image to an SD card.</li> </ul> </li> </ul>"},{"location":"getting_started/getting_started_ubuntu/#3-scripts-details","title":"3. Scripts Details","text":"<p>The bootable Linux image creation process is implemented as several small scripts for easy maintenance. Here is the introduction and main functions.</p> <ul> <li><code>make_bootable_tool.sh</code>: Contain the main menu selection.</li> <li><code>install_qemu.sh</code>: Install QEMU version 8.2.9.</li> <li><code>run_qemu.sh</code>: Start QEMU VM to install Ubuntu 24.04 from the ISO into the image.</li> <li><code>install_renesas_sw.sh</code>: Set up environment for chroot method to install software packages.</li> <li><code>install_packages_ubuntu.sh</code>: Install software packages inside an Ubuntu chroot environment.</li> <li><code>attach_sd.sh</code>: Write bootable image to SD card.</li> <li><code>settings.txt</code>: Save previously used image names.</li> </ul>"},{"location":"getting_started/getting_started_ubuntu/#4-usage","title":"4. Usage","text":""},{"location":"getting_started/getting_started_ubuntu/#41-prerequisites","title":"4.1 Prerequisites","text":"<ul> <li>Ubuntu 22.04 LTS, and 24.04 LTS are supported.</li> <li>Internet connection is required.</li> <li>The <code>sudo</code> permission is required.</li> <li>50GB+ available storage.</li> <li>32GB+ microSD card.</li> </ul>"},{"location":"getting_started/getting_started_ubuntu/#42-how-to-use","title":"4.2 How To Use","text":"<ul> <li> <p>Set the following environment:</p> <p></p><pre><code>export DL_DIR=&lt;A directory path where packages downloaded in step 3 are stored&gt;\nexport WORK_DIR=&lt;A path to your working directory&gt;\n</code></pre><p></p> </li> <li> <p>Create your working directory, and decompress packages:</p> <p></p><pre><code>mkdir -p ${WORK_DIR}\ncd ${DL_DIR}\nunzip RTK0EF0045Z0030AZJ-v*.zip\ntar xf RTK0EF0045Z0030AZJ-v*/rz-ubuntu-support-v*.tar.gz -C ${WORK_DIR}\nunzip RTK0EF0045Z0032AZJ-v*_EN.zip\ntar xf RTK0EF0045Z0032AZJ-v*_EN/rz-graphics-v*.tar.gz -C ${WORK_DIR}\nunzip RTK0EF0045Z0038AZJ-v*_EN.zip\ntar xf RTK0EF0045Z0038AZJ-v*_EN/rz-codecs-v*.tar.gz -C ${WORK_DIR}\n</code></pre><p></p> </li> <li> <p>Check your working directory:</p> <p></p><pre><code>ls ${WORK_DIR}\n</code></pre><p></p> <p>You will see the following directories.</p> <pre><code>bootloaders  installer  oss  rz-codecs  rz-graphics\n</code></pre> </li> <li> <p>Run the main script:</p> <p></p><pre><code>cd ${WORK_DIR}/installer\n./make_bootable_tool.sh\n</code></pre><p></p> </li> <li> <p>The main menu provides 3 options:</p> <ul> <li>Select Image: Prepare an image with Ubuntu 24.04 pre-installed.</li> <li>Install Software: Install software packages to the image.</li> <li>Write Image: Write the image to the SD card.</li> </ul> <p></p> </li> </ul>"},{"location":"getting_started/getting_started_ubuntu/#421-select-image","title":"4.2.1 Select Image","text":"<ul> <li> <p>Press Enter on the Select Image: and select one of the two options below:</p> <ul> <li>1 Browse: Select an image with Ubuntu 24.04 pre-installed.</li> <li>2 Create New: Create a new 16GiB image and install Ubuntu 24.04 on it.</li> </ul> <p></p> </li> </ul> <p>Note</p> <p>When you perform this process for the first time, you need to create a new image (2 Create New). You can use the created image next time (1 Browse).</p> <ul> <li> <p>For the 1 Browse option, use the file dialog to select the image (e.g., <code>Linux.img</code>). Next, press OK to confirm and skip to Section 4.2.2.</p> <p></p> </li> <li> <p>For the 2 Create New option, use the file dialog to name the image (e.g., <code>Linux.img</code>) and select its location. Next, press OK to confirm.</p> <p></p> </li> <li> <p>Enter the administrator password. The tool will then download, build, and install QEMU version 8.2.9. If it's already installed, this step will be skipped.</p> <p></p> </li> <li> <p>The tool will allocate and format <code>Linux.img</code>.</p> <p></p> </li> <li> <p>The tool will download the Ubuntu 24.04 ISO. If it already exists in the <code>downloads</code> folder, this step will be skipped.</p> <p> </p> </li> </ul> <p>Note</p> <p>Downloading the Ubuntu ISO image may take a long time depending on your environment. You can also download it from a mirror. Please choose whichever is more convenient for you.  When you download the image from the mirror, set up your environment as follows.</p> <ol> <li> <p>If you have never used <code>7z</code> on your PC, install <code>7z</code> first. </p><pre><code>sudo apt install p7zip-full\n</code></pre><p></p> </li> <li> <p>Create a directory. </p><pre><code>mkdir -p ${WORK_DIR}/installer/downloads/\n</code></pre><p></p> </li> <li> <p>Decompress the downloaded file from the mirror, and move the ISO image to your working directory. </p><pre><code>7z x ubuntu-24.04.2-live-server-arm64-iso.7z\nmv ubuntu-24.04.2-live-server-arm64-iso/ubuntu-24.04.2-live-server-arm64.iso ${WORK_DIR}/installer/downloads/\n</code></pre><p></p> </li> <li> <p>Then, execute <code>./make_bootable_tool.sh</code>.</p> </li> </ol> <ul> <li> <p>The tool will use QEMU VM to install Ubuntu 24.04 to <code>Linux.img</code>. Press OK to continue.</p> <p></p> </li> <li> <p>Follow installation instructions in Section 4.2.4.</p> </li> <li> <p>If successful, the Completed dialog box will appear. Press OK to continue.</p> <p></p> </li> </ul>"},{"location":"getting_started/getting_started_ubuntu/#422-install-software","title":"4.2.2 Install Software","text":"<ul> <li> <p>Press Enter on the Install Software:.</p> <p></p> </li> <li> <p>The tool will install all .deb packages into <code>Linux.img</code>.</p> <p></p> </li> <li> <p>Wait for the Success dialog box. Press OK to continue.</p> <p></p> </li> </ul>"},{"location":"getting_started/getting_started_ubuntu/#423-write-image","title":"4.2.3 Write Image","text":"<ul> <li> <p>Plug in the microSD card to the Host PC.</p> </li> <li> <p>In the main menu, press Enter on Write Image: to write <code>Linux.img</code> to the microSD card.</p> <p></p> </li> <li> <p>Select the microSD card (e.g., <code>sdb Transcend (59,5G)</code>). Press OK to continue.</p> <p></p> </li> <li> <p>Press Proceed to confirm.</p> <p></p> </li> <li> <p>The tool will write <code>Linux.img</code> to <code>sdb Transcend (59,5G)</code>.</p> <p></p> </li> <li> <p>If successful, the following dialog box will appear. Press OK to continue.</p> <p></p> </li> <li> <p>Execute <code>sudo eject /dev/sdb</code> to safely remove the microSD card from the Host PC.</p> </li> </ul>"},{"location":"getting_started/getting_started_ubuntu/#424-how-to-install-ubuntu-2404","title":"4.2.4 How to install Ubuntu 24.04","text":"<ul> <li> <p>Press Enter on Try or Install Ubuntu Server.</p> <p></p> </li> <li> <p>Press Enter on Continue in rich mode.</p> <p></p> </li> <li> <p>Press Enter on English.</p> <p></p> </li> <li> <p>Select your keyboard configuration (e.g., English (US)).</p> <p></p> </li> <li> <p>Use the default settings and press Enter to continue.</p> <p></p> </li> <li> <p>Use the default settings and press Enter to continue.</p> <p></p> </li> <li> <p>Use the default settings and press Enter to continue.</p> <p></p> </li> <li> <p>Wait for the mirror location to be tested (see below), then press Done to continue.</p> <p></p> </li> <li> <p>Deselect Set up this disk as an LVM group and press Done to continue.</p> <p></p> </li> <li> <p>Press Enter to confirm the partitions of the /dev/vdb disk.</p> <p></p> </li> <li> <p>Select Continue to finish partitioning and write changes to the /dev/vdb disk.</p> <p></p> </li> <li> <p>Enter username (e.g., user) and password for the administrator account, then press Done.</p> <p></p> </li> <li> <p>Use the default settings and press Enter to continue.</p> <p></p> </li> <li> <p>Use the default settings and press Done to continue.</p> <p></p> </li> <li> <p>Do not select any snap package. Press Done to continue.</p> <p></p> </li> <li> <p>Wait for the installation to finish.</p> <p></p> </li> <li> <p>Press Reboot Now to exit the installer.</p> <p></p> </li> <li> <p>Press Ctrl+A+X to exit the VM.</p> </li> </ul> <p>Back to Getting Started &gt;</p>"},{"location":"history/","title":"News &amp; Updates","text":""},{"location":"history/#news-updates","title":"News &amp; Updates","text":""},{"location":"history/#ubuntu-and-debian-for-renesas-rzg2l-mpu-support","title":"Ubuntu and Debian for Renesas RZ/G2L MPU Support","text":"<p>2025/07/31</p> <ul> <li>Ubuntu Server 24.04 on RZ/G2L EVK is available.<ul> <li>RZ/G2L Ubuntu support package v1.0.1</li> <li>Linux kernel v6.1</li> </ul> </li> <li>Debian 13 RC1 on RZ/G2L EVK is available.<ul> <li>RZ/G2L Debian support package v1.0.1</li> <li>Linux kernel v6.1</li> </ul> </li> </ul>"},{"location":"history/#ubuntu-and-debian-for-renesas-rzg2l-mpu-support_1","title":"Ubuntu and Debian for Renesas RZ/G2L MPU Support","text":"<p>2025/06/30</p> <ul> <li>Ubuntu Server 24.04 on RZ/G2L EVK is available.<ul> <li>RZ/G2L Ubuntu support package v1.0.0</li> <li>Linux kernel v6.1</li> </ul> </li> <li>Debian 13 (\"testing\" distribution version) on RZ/G2L EVK is available.<ul> <li>RZ/G2L Debian support package v1.0.0</li> <li>Debian 13 (Trixie) weekly build (testing version)</li> <li>Linux kernel v6.1</li> </ul> </li> </ul> <p>Back to Home &gt;</p>"},{"location":"overview/_components/__front_matter/","title":"front matter","text":""},{"location":"overview/_components/__front_matter/#overview","title":"Overview","text":"<p>This solution provides documents (this website), Renesas software, and script that help you to download Ubuntu and Debian ISO image from their web site, then create Ubuntu and Debian environments running on RZ EVK. The scripts merge Ubuntu/Debian root filesystem and Renesas software (Linux kernel, graphics library, codec library, and so on) to create the Ubuntu/Debian environment. You can install additional software packages by using 'apt' command. Renesas support covers Renesas deliverables only, i.e., Renesas software, documents, and scripts. Ubuntu image is maintained by Canonical. Support is available through Canonical.</p> <p>This solution supports the following distros and evaluation boards.</p> <p>Linux Distro</p> <p>kernel Version</p> <p>Target Board</p> <p>Ubuntu 24.04</p> <p>6.1</p> <p>RZ/G2L EVK (RTK9744L23S01000BE)</p> <p>Debian 13 RC1<sup>1</sup></p> <p>6.1</p> <p>RZ/G2L EVK (RTK9744L23S01000BE)</p> <ol> <li>This solution uses Debian 13 RC1 on May 17, 2025. \u21a9</li> </ol>"}]}